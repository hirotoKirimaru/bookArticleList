// tslint:disable
/**
 * openBD API
 * [openBDプロジェクト（カーリル・版元ドットコム）](https://openbd.jp)によって提供される書誌情報・書影を、だれでも自由に使える、高速なAPI.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as globalImportUrl from 'url';
import { Configuration } from './configuration';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, RequestArgs, BaseAPI, RequiredError } from './base';

/**
 *
 * @export
 * @interface BookInfo
 */
export interface BookInfo {
    /**
     *
     * @type {BookInfoOnix}
     * @memberof BookInfo
     */
    onix?: BookInfoOnix;
    /**
     *
     * @type {BookInfoHanmoto}
     * @memberof BookInfo
     */
    hanmoto?: BookInfoHanmoto;
    /**
     *
     * @type {BookInfoSummary}
     * @memberof BookInfo
     */
    summary?: BookInfoSummary;
}
/**
 * 版元独自書誌
 * @export
 * @interface BookInfoHanmoto
 */
export interface BookInfoHanmoto {
    /**
     * 公開日
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    datekoukai?: string;
    /**
     * 最終更新日
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    datemodified: string;
    /**
     * 最終作成日
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    datecreated?: string;
    /**
     * 出版日
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    dateshuppan?: string;
    /**
     * 読者書き込みページ数
     * @type {number}
     * @memberof BookInfoHanmoto
     */
    dokushakakikomipagesuu?: number;
    /**
     * 販売区分
     * @type {boolean}
     * @memberof BookInfoHanmoto
     */
    kubunhanbai?: boolean;
    /**
     * 本の綴じ方
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    toji?: string;
    /**
     * 在庫ステータス
     * @type {number}
     * @memberof BookInfoHanmoto
     */
    zaiko?: number;
    /**
     * 版
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    han?: string;
    /**
     * TRC用ジャンルコード
     * @type {number}
     * @memberof BookInfoHanmoto
     */
    genrecodetrc?: number;
    /**
     * TRC用児童ジャンルコード
     * @type {number}
     * @memberof BookInfoHanmoto
     */
    genrecodetrcjidou?: number;
    /**
     * TRC用備考
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    bikoutrc?: string;
    /**
     * NDC(日本十進分類法)
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    ndccode?: string;
    /**
     * 105文字程度の解説
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    kaisetsu105w?: string;
    /**
     * 版元からひとこと
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    hanmotokarahitokoto?: string;
    /**
     * 刊行形態
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    kankoukeitai?: string;
    /**
     * ラノベフラグ
     * @type {boolean}
     * @memberof BookInfoHanmoto
     */
    lanove?: boolean;
    /**
     * まえがきなど
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    maegakinado?: string;
    /**
     * 試し読みフラグ
     * @type {boolean}
     * @memberof BookInfoHanmoto
     */
    hastameshiyomi?: boolean;
    /**
     * 絶版日
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    datezeppan?: string;
    /**
     * 受賞情報
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    jushoujouhou?: string;
    /**
     * 重版予定日
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    datejuuhanyotei?: string;
    /**
     * 原書名
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    genshomei?: string;
    /**
     * 関連書
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    kanrensho?: string;
    /**
     * 追記
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    tsuiki?: string;
    /**
     * 帯の内容
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    obinaiyou?: string;
    /**
     * ルビの有無
     * @type {boolean}
     * @memberof BookInfoHanmoto
     */
    rubynoumu?: boolean;
    /**
     * 付録その他
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    furokusonota?: string;
    /**
     * 付録コード
     * @type {number}
     * @memberof BookInfoHanmoto
     */
    furoku?: number;
    /**
     * 雑誌コード
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    zasshicode?: string;
    /**
     * 類書・競合書
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    ruishokyougousho?: string;
    /**
     * その他の特記事項
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    sonotatokkijikou?: string;
    /**
     * 月号・号数
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    gatsugougousuu?: string;
    /**
     * 読者書き込み
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    dokushakakikomi?: string;
    /**
     * 関連書ISBN
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    kanrenshoisbn?: string;
    /**
     * 別称資料?
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    bessoushiryou?: string;
    /**
     * 重版情報
     * @type {Array<BookInfoHanmotoJyuhan>}
     * @memberof BookInfoHanmoto
     */
    jyuhan?: Array<BookInfoHanmotoJyuhan>;
    /**
     * 著者補足情報
     * @type {Array<BookInfoHanmotoAuthor>}
     * @memberof BookInfoHanmoto
     */
    author?: Array<BookInfoHanmotoAuthor>;
    /**
     * 書評情報
     * @type {Array<BookInfoHanmotoReviews>}
     * @memberof BookInfoHanmoto
     */
    reviews?: Array<BookInfoHanmotoReviews>;
    /**
     *
     * @type {BookInfoHanmotoHanmotoinfo}
     * @memberof BookInfoHanmoto
     */
    hanmotoinfo?: BookInfoHanmotoHanmotoinfo;
    /**
     * 発売元
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    hatsubai?: string;
    /**
     * 発売元よみ
     * @type {string}
     * @memberof BookInfoHanmoto
     */
    hatsubaiyomi?: string;
}
/**
 *
 * @export
 * @interface BookInfoHanmotoAuthor
 */
export interface BookInfoHanmotoAuthor {
    /**
     * 独自区分
     * @type {string}
     * @memberof BookInfoHanmotoAuthor
     */
    dokujikubun: string;
    /**
     * リストの番号
     * @type {number}
     * @memberof BookInfoHanmotoAuthor
     */
    listseq: number;
}
/**
 * 版元情報
 * @export
 * @interface BookInfoHanmotoHanmotoinfo
 */
export interface BookInfoHanmotoHanmotoinfo {
    /**
     * 名前
     * @type {string}
     * @memberof BookInfoHanmotoHanmotoinfo
     */
    name?: string;
    /**
     * よみ
     * @type {string}
     * @memberof BookInfoHanmotoHanmotoinfo
     */
    yomi?: string;
    /**
     * URL
     * @type {string}
     * @memberof BookInfoHanmotoHanmotoinfo
     */
    url?: string;
    /**
     * Twitterアドレス
     * @type {string}
     * @memberof BookInfoHanmotoHanmotoinfo
     */
    twitter?: string;
    /**
     * Facebookアドレス
     * @type {string}
     * @memberof BookInfoHanmotoHanmotoinfo
     */
    facebook?: string;
}
/**
 *
 * @export
 * @interface BookInfoHanmotoJyuhan
 */
export interface BookInfoHanmotoJyuhan {
    /**
     * 重版日
     * @type {string}
     * @memberof BookInfoHanmotoJyuhan
     */
    date: string;
    /**
     * 更新日時
     * @type {string}
     * @memberof BookInfoHanmotoJyuhan
     */
    ctime?: string;
    /**
     * 刷数
     * @type {number}
     * @memberof BookInfoHanmotoJyuhan
     */
    suri?: number;
    /**
     * コメント
     * @type {string}
     * @memberof BookInfoHanmotoJyuhan
     */
    comment?: string;
}
/**
 *
 * @export
 * @interface BookInfoHanmotoReviews
 */
export interface BookInfoHanmotoReviews {
    /**
     * 版
     * @type {string}
     * @memberof BookInfoHanmotoReviews
     */
    han?: string;
    /**
     * 書評掲載日
     * @type {string}
     * @memberof BookInfoHanmotoReviews
     */
    appearance?: string;
    /**
     * 投稿ユーザー
     * @type {string}
     * @memberof BookInfoHanmotoReviews
     */
    post_user?: string;
    /**
     * 区分ID
     * @type {number}
     * @memberof BookInfoHanmotoReviews
     */
    kubun_id?: number;
    /**
     * 情報源
     * @type {string}
     * @memberof BookInfoHanmotoReviews
     */
    source?: string;
    /**
     * 朝刊・夕刊
     * @type {string}
     * @memberof BookInfoHanmotoReviews
     */
    choyukan?: string;
    /**
     * 情報源ID
     * @type {number}
     * @memberof BookInfoHanmotoReviews
     */
    source_id?: number;
    /**
     * 評者
     * @type {string}
     * @memberof BookInfoHanmotoReviews
     */
    reviewer?: string;
    /**
     * 号
     * @type {string}
     * @memberof BookInfoHanmotoReviews
     */
    gou?: string;
    /**
     * リンク
     * @type {string}
     * @memberof BookInfoHanmotoReviews
     */
    link?: string;
}
/**
 *
 * @export
 * @interface BookInfoOnix
 */
export interface BookInfoOnix {
    /**
     *
     * @type {BookInfoOnixProductIdentifier}
     * @memberof BookInfoOnix
     */
    ProductIdentifier?: BookInfoOnixProductIdentifier;
    /**
     * ISBN（13桁）
     * @type {string}
     * @memberof BookInfoOnix
     */
    RecordReference?: string;
    /**
     *
     * @type {BookInfoOnixPublishingDetail}
     * @memberof BookInfoOnix
     */
    PublishingDetail?: BookInfoOnixPublishingDetail;
    /**
     * 削除フラグ
     * @type {string}
     * @memberof BookInfoOnix
     */
    NotificationType?: string;
    /**
     *
     * @type {BookInfoOnixProductSupply}
     * @memberof BookInfoOnix
     */
    ProductSupply?: BookInfoOnixProductSupply;
    /**
     *
     * @type {BookInfoOnixDescriptiveDetail}
     * @memberof BookInfoOnix
     */
    DescriptiveDetail?: BookInfoOnixDescriptiveDetail;
    /**
     *
     * @type {BookInfoOnixCollateralDetail}
     * @memberof BookInfoOnix
     */
    CollateralDetail?: BookInfoOnixCollateralDetail;
}
/**
 * 商品の付帯項目
 * @export
 * @interface BookInfoOnixCollateralDetail
 */
export interface BookInfoOnixCollateralDetail {
    /**
     * ONIXデータを補助する販促情報や追加情報などのデジタルデータ
     * @type {Array<BookInfoOnixCollateralDetailSupportingResource>}
     * @memberof BookInfoOnixCollateralDetail
     */
    SupportingResource?: Array<BookInfoOnixCollateralDetailSupportingResource>;
    /**
     * 内容紹介
     * @type {Array<BookInfoOnixCollateralDetailTextContent>}
     * @memberof BookInfoOnixCollateralDetail
     */
    TextContent?: Array<BookInfoOnixCollateralDetailTextContent>;
}
/**
 *
 * @export
 * @interface BookInfoOnixCollateralDetailResourceVersion
 */
export interface BookInfoOnixCollateralDetailResourceVersion {
    /**
     * フルURI
     * @type {string}
     * @memberof BookInfoOnixCollateralDetailResourceVersion
     */
    ResourceLink?: string;
    /**
     * [02に固定]
     * @type {string}
     * @memberof BookInfoOnixCollateralDetailResourceVersion
     */
    ResourceForm?: string;
    /**
     * ファイル名とファイル形式
     * @type {Array<BookInfoOnixCollateralDetailResourceVersionFeature>}
     * @memberof BookInfoOnixCollateralDetailResourceVersion
     */
    ResourceVersionFeature?: Array<BookInfoOnixCollateralDetailResourceVersionFeature>;
}
/**
 *
 * @export
 * @interface BookInfoOnixCollateralDetailResourceVersionFeature
 */
export interface BookInfoOnixCollateralDetailResourceVersionFeature {
    /**
     * ファイル名
     * @type {string}
     * @memberof BookInfoOnixCollateralDetailResourceVersionFeature
     */
    ResourceVersionFeatureType?: string;
    /**
     * ファイル形式
     * @type {string}
     * @memberof BookInfoOnixCollateralDetailResourceVersionFeature
     */
    FeatureValue?: string;
}
/**
 *
 * @export
 * @interface BookInfoOnixCollateralDetailSupportingResource
 */
export interface BookInfoOnixCollateralDetailSupportingResource {
    /**
     * 種類[01書影07商品イメージ]
     * @type {string}
     * @memberof BookInfoOnixCollateralDetailSupportingResource
     */
    ResourceContentType?: string;
    /**
     * [03静止画に固定]
     * @type {string}
     * @memberof BookInfoOnixCollateralDetailSupportingResource
     */
    ResourceMode?: string;
    /**
     * [01に固定]
     * @type {string}
     * @memberof BookInfoOnixCollateralDetailSupportingResource
     */
    ContentAudience?: string;
    /**
     * 補助リソースのバージョン
     * @type {Array<BookInfoOnixCollateralDetailResourceVersion>}
     * @memberof BookInfoOnixCollateralDetailSupportingResource
     */
    ResourceVersion?: Array<BookInfoOnixCollateralDetailResourceVersion>;
}
/**
 *
 * @export
 * @interface BookInfoOnixCollateralDetailTextContent
 */
export interface BookInfoOnixCollateralDetailTextContent {
    /**
     * テキスト
     * @type {string}
     * @memberof BookInfoOnixCollateralDetailTextContent
     */
    Text?: string;
    /**
     * 種類コード
     * @type {string}
     * @memberof BookInfoOnixCollateralDetailTextContent
     */
    TextType?: string;
    /**
     * 意図されている読者
     * @type {string}
     * @memberof BookInfoOnixCollateralDetailTextContent
     */
    ContentAudience?: string;
}
/**
 * 商品に関する情報
 * @export
 * @interface BookInfoOnixDescriptiveDetail
 */
export interface BookInfoOnixDescriptiveDetail {
    /**
     * 表記に利用する言語
     * @type {Array<BookInfoOnixDescriptiveDetailLanguage>}
     * @memberof BookInfoOnixDescriptiveDetail
     */
    Language?: Array<BookInfoOnixDescriptiveDetailLanguage>;
    /**
     *
     * @type {BookInfoOnixDescriptiveDetailTitleDetail}
     * @memberof BookInfoOnixDescriptiveDetail
     */
    TitleDetail?: BookInfoOnixDescriptiveDetailTitleDetail;
    /**
     * 判型
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetail
     */
    ProductForm?: string;
    /**
     * 判型の詳細コード
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetail
     */
    ProductFormDetail?: string;
    /**
     *
     * @type {BookInfoOnixDescriptiveDetailCollection}
     * @memberof BookInfoOnixDescriptiveDetail
     */
    Collection?: BookInfoOnixDescriptiveDetailCollection;
    /**
     * 商品に関連する（数値的）範囲、程度など
     * @type {Array<BookInfoOnixDescriptiveDetailExtent>}
     * @memberof BookInfoOnixDescriptiveDetail
     */
    Extent?: Array<BookInfoOnixDescriptiveDetailExtent>;
    /**
     * タテ・ヨコの実寸
     * @type {Array<BookInfoOnixDescriptiveDetailMeasure>}
     * @memberof BookInfoOnixDescriptiveDetail
     */
    Measure?: Array<BookInfoOnixDescriptiveDetailMeasure>;
    /**
     * 商品の著者情報
     * @type {Array<BookInfoOnixDescriptiveDetailContributor>}
     * @memberof BookInfoOnixDescriptiveDetail
     */
    Contributor?: Array<BookInfoOnixDescriptiveDetailContributor>;
    /**
     * セット商品分売可否
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetail
     */
    ProductComposition?: string;
    /**
     * 商品の対象読者を示す方法
     * @type {Array<BookInfoOnixDescriptiveDetailAudience>}
     * @memberof BookInfoOnixDescriptiveDetail
     */
    Audience?: Array<BookInfoOnixDescriptiveDetailAudience>;
    /**
     * 商品の主題、テーマ、カテゴリなど
     * @type {Array<BookInfoOnixDescriptiveDetailSubject>}
     * @memberof BookInfoOnixDescriptiveDetail
     */
    Subject?: Array<BookInfoOnixDescriptiveDetailSubject>;
    /**
     * 付録の有無
     * @type {Array<BookInfoOnixDescriptiveDetailProductPart>}
     * @memberof BookInfoOnixDescriptiveDetail
     */
    ProductPart?: Array<BookInfoOnixDescriptiveDetailProductPart>;
}
/**
 *
 * @export
 * @interface BookInfoOnixDescriptiveDetailAudience
 */
export interface BookInfoOnixDescriptiveDetailAudience {
    /**
     * 読者コード種類
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailAudience
     */
    AudienceCodeType?: string;
    /**
     * 読者コード
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailAudience
     */
    AudienceCodeValue?: string;
}
/**
 * シリーズに関する情報
 * @export
 * @interface BookInfoOnixDescriptiveDetailCollection
 */
export interface BookInfoOnixDescriptiveDetailCollection {
    /**
     * 種類コード[10に固定]
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailCollection
     */
    CollectionType?: string;
    /**
     *
     * @type {BookInfoOnixDescriptiveDetailCollectionCollectionSequence}
     * @memberof BookInfoOnixDescriptiveDetailCollection
     */
    CollectionSequence?: BookInfoOnixDescriptiveDetailCollectionCollectionSequence;
    /**
     *
     * @type {BookInfoOnixDescriptiveDetailCollectionTitleDetail}
     * @memberof BookInfoOnixDescriptiveDetailCollection
     */
    TitleDetail?: BookInfoOnixDescriptiveDetailCollectionTitleDetail;
}
/**
 * 「配本回数」について
 * @export
 * @interface BookInfoOnixDescriptiveDetailCollectionCollectionSequence
 */
export interface BookInfoOnixDescriptiveDetailCollectionCollectionSequence {
    /**
     * 配本回数コード[03に固定]
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailCollectionCollectionSequence
     */
    CollectionSequenceType?: string;
    /**
     * 配本回数
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailCollectionCollectionSequence
     */
    CollectionSequenceNumber?: string;
}
/**
 * シリーズタイトル
 * @export
 * @interface BookInfoOnixDescriptiveDetailCollectionTitleDetail
 */
export interface BookInfoOnixDescriptiveDetailCollectionTitleDetail {
    /**
     * タイトルの種類[01に固定]
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailCollectionTitleDetail
     */
    TitleType?: string;
    /**
     * シリーズ・レーベルの名前
     * @type {Array<BookInfoOnixDescriptiveDetailCollectionTitleDetailTitleElement>}
     * @memberof BookInfoOnixDescriptiveDetailCollectionTitleDetail
     */
    TitleElement?: Array<BookInfoOnixDescriptiveDetailCollectionTitleDetailTitleElement>;
}
/**
 *
 * @export
 * @interface BookInfoOnixDescriptiveDetailCollectionTitleDetailTitleElement
 */
export interface BookInfoOnixDescriptiveDetailCollectionTitleDetailTitleElement {
    /**
     * シリーズの種類
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailCollectionTitleDetailTitleElement
     */
    TitleElementLevel?: string;
    /**
     *
     * @type {BookInfoOnixDescriptiveDetailCollectionTitleDetailTitleText}
     * @memberof BookInfoOnixDescriptiveDetailCollectionTitleDetailTitleElement
     */
    TitleText?: BookInfoOnixDescriptiveDetailCollectionTitleDetailTitleText;
    /**
     * シリーズの巻次
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailCollectionTitleDetailTitleElement
     */
    PartNumber?: string;
}
/**
 * シリーズ名
 * @export
 * @interface BookInfoOnixDescriptiveDetailCollectionTitleDetailTitleText
 */
export interface BookInfoOnixDescriptiveDetailCollectionTitleDetailTitleText {
    /**
     * 読み仮名
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailCollectionTitleDetailTitleText
     */
    collationkey?: string;
    /**
     * タイトル
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailCollectionTitleDetailTitleText
     */
    content?: string;
}
/**
 *
 * @export
 * @interface BookInfoOnixDescriptiveDetailContributor
 */
export interface BookInfoOnixDescriptiveDetailContributor {
    /**
     * 著者区分
     * @type {Array<string>}
     * @memberof BookInfoOnixDescriptiveDetailContributor
     */
    ContributorRole?: Array<string>;
    /**
     * 表示順序
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailContributor
     */
    SequenceNumber?: string;
    /**
     *
     * @type {BookInfoOnixDescriptiveDetailPersonName}
     * @memberof BookInfoOnixDescriptiveDetailContributor
     */
    PersonName?: BookInfoOnixDescriptiveDetailPersonName;
    /**
     * 著者略歴
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailContributor
     */
    BiographicalNote?: string;
}
/**
 *
 * @export
 * @interface BookInfoOnixDescriptiveDetailExtent
 */
export interface BookInfoOnixDescriptiveDetailExtent {
    /**
     * 数値の種類[11はページ数]
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailExtent
     */
    ExtentType?: string;
    /**
     * 単位[03ページに固定]
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailExtent
     */
    ExtentUnit?: string;
    /**
     * 値
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailExtent
     */
    ExtentValue?: string;
}
/**
 *
 * @export
 * @interface BookInfoOnixDescriptiveDetailLanguage
 */
export interface BookInfoOnixDescriptiveDetailLanguage {
    /**
     * 価格の種類
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailLanguage
     */
    LanguageCode?: string;
    /**
     * 言語コード
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailLanguage
     */
    LanguageRole?: string;
    /**
     * 国コード
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailLanguage
     */
    CountryCode?: string;
}
/**
 *
 * @export
 * @interface BookInfoOnixDescriptiveDetailMeasure
 */
export interface BookInfoOnixDescriptiveDetailMeasure {
    /**
     * 数値の種類[01縦/02横]
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailMeasure
     */
    MeasureType?: string;
    /**
     * 単位[mmに固定]
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailMeasure
     */
    MeasureUnitCode?: string;
    /**
     * 値
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailMeasure
     */
    Measurement?: string;
}
/**
 * 著者名
 * @export
 * @interface BookInfoOnixDescriptiveDetailPersonName
 */
export interface BookInfoOnixDescriptiveDetailPersonName {
    /**
     * 読み仮名
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailPersonName
     */
    collationkey?: string;
    /**
     * タイトル
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailPersonName
     */
    content?: string;
}
/**
 *
 * @export
 * @interface BookInfoOnixDescriptiveDetailProductPart
 */
export interface BookInfoOnixDescriptiveDetailProductPart {
    /**
     * 付録の数量[1に固定]
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailProductPart
     */
    NumberOfItemsOfThisForm?: string;
    /**
     * 付録コード[00に固定]
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailProductPart
     */
    ProductForm?: string;
    /**
     * 付録の内容
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailProductPart
     */
    ProductFormDescription?: string;
}
/**
 *
 * @export
 * @interface BookInfoOnixDescriptiveDetailSubject
 */
export interface BookInfoOnixDescriptiveDetailSubject {
    /**
     * カテゴリ
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailSubject
     */
    SubjectSchemeIdentifier?: string;
    /**
     * 78 or 79の場合に、「Cコード」または「ジャンルコード」
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailSubject
     */
    SubjectCode?: string;
    /**
     * メーンとなるSubjectのカテゴリ
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailSubject
     */
    MainSubject?: string;
    /**
     * キーワード
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailSubject
     */
    SubjectHeadingText?: string;
}
/**
 * 商品の「書名」を設定
 * @export
 * @interface BookInfoOnixDescriptiveDetailTitleDetail
 */
export interface BookInfoOnixDescriptiveDetailTitleDetail {
    /**
     * タイトルの種類[01に固定]
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailTitleDetail
     */
    TitleType?: string;
    /**
     *
     * @type {BookInfoOnixDescriptiveDetailTitleDetailTitleElement}
     * @memberof BookInfoOnixDescriptiveDetailTitleDetail
     */
    TitleElement?: BookInfoOnixDescriptiveDetailTitleDetailTitleElement;
}
/**
 * タイトルの要素
 * @export
 * @interface BookInfoOnixDescriptiveDetailTitleDetailTitleElement
 */
export interface BookInfoOnixDescriptiveDetailTitleDetailTitleElement {
    /**
     * タイトルのレベル[01に固定]
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailTitleDetailTitleElement
     */
    TitleElementLevel?: string;
    /**
     *
     * @type {BookInfoOnixDescriptiveDetailTitleDetailTitleElementTitleText}
     * @memberof BookInfoOnixDescriptiveDetailTitleDetailTitleElement
     */
    TitleText?: BookInfoOnixDescriptiveDetailTitleDetailTitleElementTitleText;
    /**
     *
     * @type {BookInfoOnixDescriptiveDetailTitleDetailTitleElementSubtitle}
     * @memberof BookInfoOnixDescriptiveDetailTitleDetailTitleElement
     */
    Subtitle?: BookInfoOnixDescriptiveDetailTitleDetailTitleElementSubtitle;
}
/**
 * サブタイトル
 * @export
 * @interface BookInfoOnixDescriptiveDetailTitleDetailTitleElementSubtitle
 */
export interface BookInfoOnixDescriptiveDetailTitleDetailTitleElementSubtitle {
    /**
     * 読み仮名
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailTitleDetailTitleElementSubtitle
     */
    collationkey?: string;
    /**
     * 書名
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailTitleDetailTitleElementSubtitle
     */
    content?: string;
}
/**
 * 書名
 * @export
 * @interface BookInfoOnixDescriptiveDetailTitleDetailTitleElementTitleText
 */
export interface BookInfoOnixDescriptiveDetailTitleDetailTitleElementTitleText {
    /**
     * 読み仮名
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailTitleDetailTitleElementTitleText
     */
    collationkey?: string;
    /**
     * 書名
     * @type {string}
     * @memberof BookInfoOnixDescriptiveDetailTitleDetailTitleElementTitleText
     */
    content?: string;
}
/**
 * 識別情報(ISBN)
 * @export
 * @interface BookInfoOnixProductIdentifier
 */
export interface BookInfoOnixProductIdentifier {
    /**
     * IDの種類[ISBN固定]
     * @type {string}
     * @memberof BookInfoOnixProductIdentifier
     */
    ProductIDType?: string;
    /**
     * ISBN（13桁）
     * @type {string}
     * @memberof BookInfoOnixProductIdentifier
     */
    IDValue?: string;
}
/**
 * 市場における商品の出版状況、供給等
 * @export
 * @interface BookInfoOnixProductSupply
 */
export interface BookInfoOnixProductSupply {
    /**
     *
     * @type {BookInfoOnixProductSupplySupplyDetail}
     * @memberof BookInfoOnixProductSupply
     */
    SupplyDetail?: BookInfoOnixProductSupplySupplyDetail;
}
/**
 * 商品のアベイラビリテイ（入手可能性）や価格、その他の供給状況
 * @export
 * @interface BookInfoOnixProductSupplySupplyDetail
 */
export interface BookInfoOnixProductSupplySupplyDetail {
    /**
     *
     * @type {BookInfoOnixProductSupplySupplyDetailReturnsConditions}
     * @memberof BookInfoOnixProductSupplySupplyDetail
     */
    ReturnsConditions?: BookInfoOnixProductSupplySupplyDetailReturnsConditions;
    /**
     * 「近刊情報センター」では、99に固定
     * @type {string}
     * @memberof BookInfoOnixProductSupplySupplyDetail
     */
    ProductAvailability?: string;
    /**
     * 価格（単価）について
     * @type {Array<BookInfoOnixProductSupplySupplyDetailPrice>}
     * @memberof BookInfoOnixProductSupplySupplyDetail
     */
    Price?: Array<BookInfoOnixProductSupplySupplyDetailPrice>;
}
/**
 *
 * @export
 * @interface BookInfoOnixProductSupplySupplyDetailPrice
 */
export interface BookInfoOnixProductSupplySupplyDetailPrice {
    /**
     * 価格タイプ
     * @type {string}
     * @memberof BookInfoOnixProductSupplySupplyDetailPrice
     */
    PriceType?: string;
    /**
     * 価格
     * @type {string}
     * @memberof BookInfoOnixProductSupplySupplyDetailPrice
     */
    PriceAmount?: string;
    /**
     * 通貨
     * @type {string}
     * @memberof BookInfoOnixProductSupplySupplyDetailPrice
     */
    CurrencyCode?: string;
    /**
     * 特価期限
     * @type {Array<BookInfoOnixProductSupplySupplyDetailPriceDate>}
     * @memberof BookInfoOnixProductSupplySupplyDetailPrice
     */
    PriceDate?: Array<BookInfoOnixProductSupplySupplyDetailPriceDate>;
}
/**
 *
 * @export
 * @interface BookInfoOnixProductSupplySupplyDetailPriceDate
 */
export interface BookInfoOnixProductSupplySupplyDetailPriceDate {
    /**
     * 価格の種類
     * @type {string}
     * @memberof BookInfoOnixProductSupplySupplyDetailPriceDate
     */
    PriceDateRole?: string;
    /**
     * 日付
     * @type {string}
     * @memberof BookInfoOnixProductSupplySupplyDetailPriceDate
     */
    Date?: string;
    /**
     * 価格
     * @type {string}
     * @memberof BookInfoOnixProductSupplySupplyDetailPriceDate
     */
    Price?: string;
}
/**
 * 返品条件について
 * @export
 * @interface BookInfoOnixProductSupplySupplyDetailReturnsConditions
 */
export interface BookInfoOnixProductSupplySupplyDetailReturnsConditions {
    /**
     * 「ONIX返品条件コード」 に固定
     * @type {string}
     * @memberof BookInfoOnixProductSupplySupplyDetailReturnsConditions
     */
    ReturnsCodeType?: string;
    /**
     * 条件コード
     * @type {string}
     * @memberof BookInfoOnixProductSupplySupplyDetailReturnsConditions
     */
    ReturnsCode?: string;
}
/**
 * 出版社に関する情報
 * @export
 * @interface BookInfoOnixPublishingDetail
 */
export interface BookInfoOnixPublishingDetail {
    /**
     * 商品の出版に関する日付情報
     * @type {Array<BookInfoOnixPublishingDetailPublishingDate>}
     * @memberof BookInfoOnixPublishingDetail
     */
    PublishingDate?: Array<BookInfoOnixPublishingDetailPublishingDate>;
    /**
     *
     * @type {BookInfoOnixPublishingDetailImprint}
     * @memberof BookInfoOnixPublishingDetail
     */
    Imprint?: BookInfoOnixPublishingDetailImprint;
    /**
     *
     * @type {BookInfoOnixPublishingDetailPublisher}
     * @memberof BookInfoOnixPublishingDetail
     */
    Publisher?: BookInfoOnixPublishingDetailPublisher;
}
/**
 * 「発行元出版社」に関する情報
 * @export
 * @interface BookInfoOnixPublishingDetailImprint
 */
export interface BookInfoOnixPublishingDetailImprint {
    /**
     * 「発行元出版社」名
     * @type {string}
     * @memberof BookInfoOnixPublishingDetailImprint
     */
    ImprintName?: string;
    /**
     * 「発行元出版社」コード
     * @type {Array<BookInfoOnixPublishingDetailImprintImprintIdentifier>}
     * @memberof BookInfoOnixPublishingDetailImprint
     */
    ImprintIdentifier?: Array<BookInfoOnixPublishingDetailImprintImprintIdentifier>;
}
/**
 *
 * @export
 * @interface BookInfoOnixPublishingDetailImprintImprintIdentifier
 */
export interface BookInfoOnixPublishingDetailImprintImprintIdentifier {
    /**
     * ID
     * @type {string}
     * @memberof BookInfoOnixPublishingDetailImprintImprintIdentifier
     */
    IDValue?: string;
    /**
     * IDタイプ
     * @type {string}
     * @memberof BookInfoOnixPublishingDetailImprintImprintIdentifier
     */
    ImprintIDType?: string;
}
/**
 * 「発行元出版社」と異なる場合、「発売元出版社」についての情報
 * @export
 * @interface BookInfoOnixPublishingDetailPublisher
 */
export interface BookInfoOnixPublishingDetailPublisher {
    /**
     * Publisher 【出版社】 に固定
     * @type {string}
     * @memberof BookInfoOnixPublishingDetailPublisher
     */
    PublishingRole?: string;
    /**
     * 「発売元出版社」名
     * @type {string}
     * @memberof BookInfoOnixPublishingDetailPublisher
     */
    PublisherName?: string;
    /**
     * 「発売元出版社」コード
     * @type {Array<BookInfoOnixPublishingDetailPublisherPublisherIdentifier>}
     * @memberof BookInfoOnixPublishingDetailPublisher
     */
    PublisherIdentifier?: Array<BookInfoOnixPublishingDetailPublisherPublisherIdentifier>;
}
/**
 *
 * @export
 * @interface BookInfoOnixPublishingDetailPublisherPublisherIdentifier
 */
export interface BookInfoOnixPublishingDetailPublisherPublisherIdentifier {
    /**
     * ID
     * @type {string}
     * @memberof BookInfoOnixPublishingDetailPublisherPublisherIdentifier
     */
    IDValue?: string;
    /**
     * IDタイプ
     * @type {string}
     * @memberof BookInfoOnixPublishingDetailPublisherPublisherIdentifier
     */
    PublisherIDType?: string;
}
/**
 *
 * @export
 * @interface BookInfoOnixPublishingDetailPublishingDate
 */
export interface BookInfoOnixPublishingDetailPublishingDate {
    /**
     * 発売日の種類
     * @type {string}
     * @memberof BookInfoOnixPublishingDetailPublishingDate
     */
    PublishingDateRole?: string;
    /**
     * 発売日
     * @type {string}
     * @memberof BookInfoOnixPublishingDetailPublishingDate
     */
    Date?: string;
}
/**
 * 書誌の概要
 * @export
 * @interface BookInfoSummary
 */
export interface BookInfoSummary {
    /**
     * ISBN
     * @type {string}
     * @memberof BookInfoSummary
     */
    isbn: string;
    /**
     * 書名
     * @type {string}
     * @memberof BookInfoSummary
     */
    title: string;
    /**
     * 巻号
     * @type {string}
     * @memberof BookInfoSummary
     */
    volume: string;
    /**
     * シリーズ名
     * @type {string}
     * @memberof BookInfoSummary
     */
    series: string;
    /**
     * 著者名
     * @type {string}
     * @memberof BookInfoSummary
     */
    author: string;
    /**
     * 出版者
     * @type {string}
     * @memberof BookInfoSummary
     */
    publisher: string;
    /**
     * 出版年月
     * @type {string}
     * @memberof BookInfoSummary
     */
    pubdate: string;
    /**
     * 書影URL
     * @type {string}
     * @memberof BookInfoSummary
     */
    cover: string;
}

/**
 * DefaultApi - axios parameter creator
 * @export
 */
export const DefaultApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * 書誌の概要を取得する。
         * @summary Returns book info summry
         * @param {Array<string>} isbn ISBNを指定。複数指定の場合はカンマ[,]で区切る。ISBNをXXX-X-XXXX-XXXX-Xの形式で指定する。1,000件まで複数指定。
         * @param {boolean} [pretty] 指定された場合、JSONを整形表示する。
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getGet: async (isbn: Array<string>, pretty?: boolean, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'isbn' is not null or undefined
            if (isbn === null || isbn === undefined) {
                throw new RequiredError('isbn','Required parameter isbn was null or undefined when calling getGet.');
            }
            const localVarPath = `/get`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (isbn) {
                localVarQueryParameter['isbn'] = isbn;
            }

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }



            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            // TODO:？？？？
            //delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 書誌の概要を取得する。
         * @summary Returns book info summry
         * @param {Array<string>} isbn ISBNを指定。複数指定の場合はカンマ[,]で区切る。ISBNをXXX-X-XXXX-XXXX-Xの形式で指定する。1,0000件まで複数指定。
         * @param {boolean} [pretty] 指定された場合、JSONを整形表示する。
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPost: async (isbn: Array<string>, pretty?: boolean, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'isbn' is not null or undefined
            if (isbn === null || isbn === undefined) {
                throw new RequiredError('isbn','Required parameter isbn was null or undefined when calling getPost.');
            }
            const localVarPath = `/get`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (pretty !== undefined) {
                localVarQueryParameter['pretty'] = pretty;
            }

            if (isbn) {
                localVarQueryParameter['isbn'] = isbn;
            }



            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            // TODO: ？？？？
            // delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DefaultApi - functional programming interface
 * @export
 */
export const DefaultApiFp = function(configuration?: Configuration) {
    return {
        /**
         * 書誌の概要を取得する。
         * @summary Returns book info summry
         * @param {Array<string>} isbn ISBNを指定。複数指定の場合はカンマ[,]で区切る。ISBNをXXX-X-XXXX-XXXX-Xの形式で指定する。1,000件まで複数指定。
         * @param {boolean} [pretty] 指定された場合、JSONを整形表示する。
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getGet(isbn: Array<string>, pretty?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<BookInfo>>> {
            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getGet(isbn, pretty, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 書誌の概要を取得する。
         * @summary Returns book info summry
         * @param {Array<string>} isbn ISBNを指定。複数指定の場合はカンマ[,]で区切る。ISBNをXXX-X-XXXX-XXXX-Xの形式で指定する。1,0000件まで複数指定。
         * @param {boolean} [pretty] 指定された場合、JSONを整形表示する。
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getPost(isbn: Array<string>, pretty?: boolean, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<BookInfo>>> {
            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getPost(isbn, pretty, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * DefaultApi - factory interface
 * @export
 */
export const DefaultApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * 書誌の概要を取得する。
         * @summary Returns book info summry
         * @param {Array<string>} isbn ISBNを指定。複数指定の場合はカンマ[,]で区切る。ISBNをXXX-X-XXXX-XXXX-Xの形式で指定する。1,000件まで複数指定。
         * @param {boolean} [pretty] 指定された場合、JSONを整形表示する。
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getGet(isbn: Array<string>, pretty?: boolean, options?: any): AxiosPromise<Array<BookInfo>> {
            return DefaultApiFp(configuration).getGet(isbn, pretty, options).then((request) => request(axios, basePath));
        },
        /**
         * 書誌の概要を取得する。
         * @summary Returns book info summry
         * @param {Array<string>} isbn ISBNを指定。複数指定の場合はカンマ[,]で区切る。ISBNをXXX-X-XXXX-XXXX-Xの形式で指定する。1,0000件まで複数指定。
         * @param {boolean} [pretty] 指定された場合、JSONを整形表示する。
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPost(isbn: Array<string>, pretty?: boolean, options?: any): AxiosPromise<Array<BookInfo>> {
            return DefaultApiFp(configuration).getPost(isbn, pretty, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * DefaultApi - object-oriented interface
 * @export
 * @class DefaultApi
 * @extends {BaseAPI}
 */
export class DefaultApi extends BaseAPI {
    /**
     * 書誌の概要を取得する。
     * @summary Returns book info summry
     * @param {Array<string>} isbn ISBNを指定。複数指定の場合はカンマ[,]で区切る。ISBNをXXX-X-XXXX-XXXX-Xの形式で指定する。1,000件まで複数指定。
     * @param {boolean} [pretty] 指定された場合、JSONを整形表示する。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public getGet(isbn: Array<string>, pretty?: boolean, options?: any) {
        return DefaultApiFp(this.configuration).getGet(isbn, pretty, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 書誌の概要を取得する。
     * @summary Returns book info summry
     * @param {Array<string>} isbn ISBNを指定。複数指定の場合はカンマ[,]で区切る。ISBNをXXX-X-XXXX-XXXX-Xの形式で指定する。1,0000件まで複数指定。
     * @param {boolean} [pretty] 指定された場合、JSONを整形表示する。
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public getPost(isbn: Array<string>, pretty?: boolean, options?: any) {
        return DefaultApiFp(this.configuration).getPost(isbn, pretty, options).then((request) => request(this.axios, this.basePath));
    }

}


